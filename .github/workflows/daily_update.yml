name: Daily Automated Report Generation

# This defines when the workflow runs.
on:
  # Schedule: Runs every day at 00:00 UTC (midnight).
  schedule:
    # Use crontab.guru for help with cron syntax
    - cron: '0 0 * * *' 
  # Allows manual triggering of the workflow from the Actions tab
  workflow_dispatch:

jobs:
  generate_report:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # GITHUB_TOKEN is automatically provided by GitHub
          token: ${{ secrets.GITHUB_TOKEN }}
          
      # Step 2: Set up Python
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      # Step 3: Install Dependencies (Need pandas for CSV and data manipulation)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy

      # Step 4: Run the Python script to generate the CSV report
      - name: Generate daily analysis report
        run: python generate_report.py

      # Step 5: Commit and Push the new CSV file
      - name: Commit and Push the updated report
        # This action is required to handle the git credentials securely and push back to the repo
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions Bot
          author_email: actions@github.com
          message: 'feat(data): Generate daily analysis report (Actual vs Predicted).'
          # Specify the newly created CSV file to commit
          add: 'daily_report.csv'
          # Use main or master depending on your default branch name
          branch: main
